userdata Window > 0i {
    new (title=reg.g1: string, settings=reg.ptr: WinBuilder) > 0i
    fun width(self=reg.ptr, width=reg.g1: uint?): uint > 8i
    fun height(self=reg.ptr, height=reg.g1: uint?): uint > 9i
    fun fps(self=reg.ptr, fps=reg.g1: uint) > 13i
    fun title(self=reg.ptr, title=reg.g1: string)> 15i
    fun clear(self=reg.ptr) > 5i
    fun display(self=reg.ptr) > 6i
    fun close(self=reg.ptr) > 7i
    fun poll(self=reg.ptr): Event? > 10i
    fun drawRectangle(
        self=reg.ptr,
        x=reg.g1: float,
        y=reg.g2: float,
        width=reg.g3: float,
        height=reg.g4: float,
    ) > 47i
    fun drawCircle(
        self=reg.ptr, 
        x=reg.g1: float, 
        y=reg.g2: float, 
        radius=reg.g3: float,
    ) > 48i
    fun drawText(
        self=reg.ptr, 
        x=reg.g1: float, 
        y=reg.g2: float, 
        text=reg.g3: string, 
    ) > 49i
    fun styledRectangle(
        self=reg.ptr,
        x=reg.g1: float,
        y=reg.g2: float,
        width=reg.g3: float,
        height=reg.g4: float,
        style=reg.g5: DrawStyle,
    ) > 50i
    fun styledCircle(
        self=reg.ptr, 
        x=reg.g1: float, 
        y=reg.g2: float, 
        radius=reg.g3: float, 
        style=reg.g4: DrawStyle,
    ) > 51i
    /// Draws text with a style
    /// Use only if you can't set the style of the window
    fun styledText(
        self=reg.ptr, 
        x=reg.g1: float, 
        y=reg.g2: float, 
        text=reg.g3: string, 
        style=reg.g4: DrawStyle,
    ) > 73i
    fun background(self=reg.ptr, color=reg.g1: Color) > 60i
    fun getStyle(self=reg.ptr): DrawStyle > 61i
    fun setStyle(self=reg.ptr, style=reg.g1: DrawStyle) > 62i
    fun color(self=reg.ptr, color=reg.g1: Color) > 63i
    fun rotation(self=reg.ptr, rotation=reg.g1: float) > 64i
    fun scaleX(self=reg.ptr, scaleX=reg.g1: float) > 65i
    fun scaleY(self=reg.ptr, scaleY=reg.g1: float) > 66i
    fun outlineColor(self=reg.ptr, outlineColor=reg.g1: Color) > 67i
    fun outlineThickness(self=reg.ptr, outlineThickness=reg.g1: float) > 68i
    fun font(self=reg.ptr, font=reg.g1: Font): bool > 69i
    fun fontSize(self=reg.ptr, fontSize=reg.g1: uint) > 70i
    fun characterSpacing(self=reg.ptr, characterSpacing=reg.g1: float) > 71i
    fun lineSpacing(self=reg.ptr, lineSpacing=reg.g1: float) > 72i
    /// Saves the current style
    /// This does not affect saved font, since fonts are expensive to copy
    fun save(self=reg.ptr) > 74i
    fun restore(self=reg.ptr) > 75i
}
userdata WinBuilder > 1i {
    new () > 1i
    fun build(self=reg.ptr): Window > 54i
    fun title(self=reg.ptr, title=reg.g1: string): WinBuilder > 2i
    fun width(self=reg.ptr, width=reg.g1: uint): WinBuilder > 3i
    fun height(self=reg.ptr, height=reg.g1: uint): WinBuilder > 4i
    fun resize(self=reg.ptr): WinBuilder > 55i
    fun fullscreen(self=reg.ptr): WinBuilder > 56i
    fun close(self=reg.ptr): WinBuilder > 57i
    fun titlebar(self=reg.ptr): WinBuilder > 58i
    fun default(self=reg.ptr): WinBuilder > 59i
}
userdata Event > 2i {
    fun code(self=reg.ptr): Events > 11i
    fun key(self=reg.ptr): Keys > 12i
    fun scan(self=reg.ptr): Scan > 16i
    fun input(self=reg.ptr): char > 14i
    fun alt(self=reg.ptr): bool > 22i
    fun control(self=reg.ptr): bool > 23i
    fun shift(self=reg.ptr): bool > 24i
    fun system(self=reg.ptr): bool > 25i
    fun verticalWheel(self=reg.ptr): float > 17i
    fun horizontalWheel(self=reg.ptr): float > 18i
    fun mouseX(self=reg.ptr): uint > 19i
    fun mouseY(self=reg.ptr): uint > 20i
    fun mouseButton(self=reg.ptr): MouseButton > 21i
}
userdata DrawStyle > 3i {
    new () > 26i
    fun color(self=reg.ptr, color=reg.g1: Color): DrawStyle > 27i
    fun rotation(self=reg.ptr, rotation=reg.g1: float): DrawStyle > 35i
    fun scaleX(self=reg.ptr, scaleX=reg.g1: float): DrawStyle > 36i
    fun scaleY(self=reg.ptr, scaleY=reg.g1: float): DrawStyle > 37i
    fun outlineColor(self=reg.ptr, outlineColor=reg.g1: Color): DrawStyle > 38i
    fun outlineThickness(self=reg.ptr, outlineThickness=reg.g1: float): DrawStyle > 39i
    fun font(self=reg.ptr, font=reg.g1: Font): DrawStyle > 40i
    fun fontSize(self=reg.ptr, fontSize=reg.g1: uint): DrawStyle > 41i
    fun characterSpacing(self=reg.ptr, characterSpacing=reg.g1: float): DrawStyle > 52i
    fun lineSpacing(self=reg.ptr, lineSpacing=reg.g1: float): DrawStyle > 53i
}
userdata Color > 4i {
    new (r=reg.g1: uint, g=reg.g2: uint, b=reg.g3: uint, a=reg.g4: uint) > 28i
    fun r(self=reg.ptr, set=reg.g1: uint?): uint > 29i
    fun g(self=reg.ptr, set=reg.g1: uint?): uint > 30i
    fun b(self=reg.ptr, set=reg.g1: uint?): uint > 31i
    fun a(self=reg.ptr, set=reg.g1: uint?): uint > 32i
}
fun ColorFromHex(hex=reg.g1: string): Color > 33i
fun ColorCopy(self=reg.ptr): Color > 34i
fun ColorFrom(color=reg.g1: Colors): Color > 46i
userdata Font > 5i {
    new (path=reg.g1: string) > 42i
}
fun FontDefault(name=reg.g1: string): Font > 43i
fun FontUbuntuMono(): Font > 44i
fun FontRoboto(): Font > 45i
enum Events > 0i {
    Closed
    Resized
    LostFocus
    GainedFocus
    Input
    KeyPressed
    KeyReleased
    MouseWheelScrolled
    MouseButtonPressed
    MouseButtonReleased
    MouseMoved
    Unknown
    None
}
enum Keys > 1i { 
    A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 
    Num0 Num1 Num2 Num3 Num4 Num5 Num6 Num7 Num8 Num9 
    Escape LControl LShift LAlt LSystem RControl RShift RAlt RSystem Menu LBracket RBracket 
    Semicolon Comma Period Quote Slash Backslash Tilde Equal Hyphen Space 
    Enter Backspace Tab PageUp PageDown End Home Insert Delete 
    Add Subtract Multiply Divide Left Right Up Down 
    Numpad0 Numpad1 Numpad2 Numpad3 Numpad4 Numpad5 Numpad6 Numpad7 Numpad8 Numpad9 
    F1 F2 F3 F4 F5 F6 F7 F8 F9 F10 F11 F12 F13 F14 F15 
    Pause
}
enum Scan > 2i { 
    A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 
    Num1 Num2 Num3 Num4 Num5 Num6 Num7 Num8 Num9 Num0 
    Enter Escape Backspace Tab Space Hyphen Equal LBracket RBracke Backslash 
    Semicolon Apostrophe Grave Comma Period Slash 
    F1 F2 F3 F4 F5 F6 F7 F8 F9 F10 F11 F12 F13 F14 F15 F16 F17 F18 F19 F20 F21 F22 F23 F24 
    CapsLock PrintScreen ScrollLock Pause Insert Home PageUp Delete End PageDown 
    Right Left Down Up 
    NumLock NumpadDivide NumpadMultiply NumpadMinus NumpadPlus NumpadEqual NumpadEnter NumpadDecimal 
    Numpad1 Numpad2 Numpad3 Numpad4 Numpad5 Numpad6 Numpad7 Numpad8 Numpad9 Numpad 
    NonUsBackslash Application Execute ModeChange Help Menu 
    Select Redo Undo Cut Copy Paste 
    VolumeMute VolumeUp VolumeDown MediaPlayPause 
    MediaStop MediaNextTrack MediaPreviousTrack 
    LControl LShift LAlt LSystem RControl RShift RAlt RSystem 
    Back Forward Refresh Stop Search Favorites HomePage 
    LaunchApplication1 LaunchApplication2 LaunchMail LaunchMediaSelect 
    ScancodeCount 
}
enum MouseButton > 3i {
    Left Right Middle 
    XButton1 XButton2
}
enum Colors > 4i {
    Black White Red Green Blue Yellow Magenta Cyan Transparent
}